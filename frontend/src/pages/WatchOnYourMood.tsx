import React from "react";
import { useNavigate } from "react-router-dom";

// Reusable MoodCard component
interface MoodCardProps {
Â  label: string;
Â  color: string;
}

const MoodCard: React.FC<MoodCardProps & { onClick?: () => void }> = ({ label, color, onClick }) => (
Â  <div
Â  Â  className={`bg-gray-900 rounded-lg px-6 py-4 flex items-center font-semibold text-lg cursor-pointer transition-all duration-300 hover:scale-[1.03] hover:shadow-lg ${color}`}
Â  Â  style={{ minHeight: 60 }}
Â  Â  onClick={onClick}
Â  >
Â  Â  {label}
Â  </div>
);

// New component for the recommendation button/card
const RecommendationCard: React.FC<{ onClick: () => void }> = ({ onClick }) => (
    <div
        className="col-span-2 md:col-span-4 bg-violet-700 rounded-xl p-8 flex flex-col items-center justify-center text-center cursor-pointer transition-all duration-500 hover:bg-violet-800 hover:shadow-xl shadow-violet-700/50 mt-12 mb-6"
        onClick={onClick}
    >
        <h3 className="text-3xl font-extrabold text-white mb-2">
            ðŸ¤” Still Not Sure What to Watch?
        </h3>
        <p className="text-lg text-violet-200 mb-4 font-light">
            Let us recommend some of our favorites based on your unique taste.
        </p>
        <button
            className="px-8 py-3 bg-white text-violet-700 font-bold text-lg rounded-full shadow-lg hover:bg-gray-100 transition-colors"
        >
            âœ¨ Get Personalized Anime
        </button>
    </div>
);


// MAPPING (retained for context, though not used in this component logic)
const moodGenreMap: Record<string, number> = {
Â  happy: 4, Â  Â  Â // Comedy
Â  sad: 8, Â  Â  Â  Â // Drama
Â  romance: 22, Â  // Romance
Â  chill: 22, Â  Â  // Slice of Life
Â  horror: 14, Â  Â // Horror
Â  adventure: 2, Â // Adventure
Â  energize: 1, Â  // Action
Â  focus: 24, Â  Â  // Psychological
Â  party: 4, Â  Â  Â // Comedy
Â  sleep: 22, Â  Â  // Slice of Life
Â  workout: 1, Â  Â // Action
Â  feelgood: 22, Â // Slice of Life
};

const fetchAnimeByMood = async (mood: string) => {
Â  const genreId = moodGenreMap[mood.toLowerCase()] || 22;
Â  const url = `https://api.jikan.moe/v4/anime?genres=${genreId}&order_by=score&sort=desc&limit=5`;
Â  try {
Â  Â  const res = await fetch(url);
Â  Â  const data = await res.json();
Â  Â  (`Anime for mood '${mood}':`, data.data);
Â  } catch (err) {
Â  Â  console.error('Error fetching from Jikan:', err);
Â  }
};

const moods = [
Â  // ðŸŽ­ Emotional Moods
Â  { label: "Feel-Good Vibes", key: "feel-good-vibes", color: "border-l-4 border-green-400" },
Â  { label: "Tearjerker Nights", key: "tearjerker-nights", color: "border-l-4 border-blue-400" },
Â  { label: "Chill & Cozy", key: "chill-cozy", color: "border-l-4 border-green-200" },
Â  { label: "Adrenaline Rush", key: "adrenaline-rush", color: "border-l-4 border-pink-400" },
Â  { label: "Mind-Bender", key: "mind-bender", color: "border-l-4 border-gray-400" },
Â  { label: "Romantic Feels", key: "romantic-feels", color: "border-l-4 border-red-400" },
Â  // ðŸŒŒ Atmosphere Moods
Â  { label: "Dreamscape", key: "dreamscape", color: "border-l-4 border-purple-400" },
Â  { label: "Dark & Gritty", key: "dark-gritty", color: "border-l-4 border-gray-900" },
Â  { label: "Nostalgia Lane", key: "nostalgia-lane", color: "border-l-4 border-yellow-400" },
Â  { label: "Epic Journeys", key: "epic-journeys", color: "border-l-4 border-orange-400" },
Â  { label: "Laugh Out Loud", key: "laugh-out-loud", color: "border-l-4 border-pink-300" },
Â  { label: "Calm Before Sleep", key: "calm-before-sleep", color: "border-l-4 border-blue-200" },
Â  // ðŸŽ¶ Energy-Based Moods
Â  { label: "High Energy", key: "high-energy", color: "border-l-4 border-red-300" },
Â  { label: "Slow Burn", key: "slow-burn", color: "border-l-4 border-gray-200" },
Â  { label: "Aesthetic Mood", key: "aesthetic-mood", color: "border-l-4 border-indigo-400" },
Â  { label: "Cozy Rainy Day", key: "cozy-rainy-day", color: "border-l-4 border-blue-300" },
];

const WatchOnYourMood: React.FC = () => {
 window.scrollTo({ top: 0, behavior: 'instant' })
Â  const navigate = useNavigate();

    const handlePersonalizeClick = () => {
        // Navigate to the new personalized recommendation page
        navigate('/personalize'); 
    };

Â  return (
Â  Â  <div className="min-h-screen bg-black text-white py-12 px-4">
Â  Â  Â  <div className="max-w-5xl mx-auto">
            {/* Title Section */}
            <div className="text-center mb-10 mt-6">
                <h1 className="text-5xl font-extrabold text-white mb-2">Watch By Your Mood</h1>
                <p className="text-xl text-gray-400">Find the perfect anime vibe for your current feeling.</p>
            </div>

            {/* Mood Grid Section */}
            <h2 className="text-2xl font-semibold mb-4 text-gray-200">Moods & Moments</h2>
Â  Â  Â  Â  <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
Â  Â  Â  Â  Â  {moods.map((mood) => (
Â  Â  Â  Â  Â  Â  <MoodCard
Â  Â  Â  Â  Â  Â  Â  key={mood.key}
Â  Â  Â  Â  Â  Â  Â  label={mood.label}
Â  Â  Â  Â  Â  Â  Â  color={mood.color}
Â  Â  Â  Â  Â  Â  Â  onClick={() => navigate(`/mood/${mood.key}`)}
Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  ))}
Â  Â  Â  Â  </div>

            {/* New Personalized Recommendation Section */}
            <RecommendationCard onClick={handlePersonalizeClick} />

Â  Â  Â  </div>
Â  Â  </div>
Â  );
};

export default WatchOnYourMood;